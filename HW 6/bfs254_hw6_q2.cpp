//Author: Briana Singleton
//NYU ID: bfs254
//HW 6, Q2
//takes an integer, n, and a character and prints out 
//a pine tree with n-lines and n triangles made of the character entered
//Last modified: 13 August 2021

#include <iostream>
using namespace std;

void printShiftedTriangle(int n, int m, char symbol);
//Takes n for number of lines, m for size of left margin, and a symbol to print one triangle of a pine tree
//n, m, and symbol are all generated by the printPineTree() function
//Returns an n-line pine tree triangle moved m to the right with the user-given symbol passed through printPineTree() 
//to the function printPineTree()

void printPineTree(int n, char symbol);
//Takes n for number of triangles in a pine tree and a symbol to print the pine tree with from the user 
//Returns a pine tree with n triangles typed with the user-given symbol

int main() {

    cout<< "Please enter a positive integer: ";
    int n;
    cin>> n;
    cout<< "Please enter a symbol character (ex.) *, +, $, etc.): ";
    char ch;
    cin>> ch;

    printPineTree(n, ch);


    return 0; 
}

void printShiftedTriangle(int n, int m, char symbol) {

    int numOfsymbols = 1;
    int numOfspaces = m + (n - 1);
    
    for (int row = 1; row <= n; row++) {
        for (int spaceCount = 0; spaceCount < numOfspaces; spaceCount++) {
            cout<< " ";
        }
        for (int symbolCount = 1; symbolCount <= numOfsymbols; symbolCount++) {
            cout<< symbol;
        } 

        numOfspaces--;
        numOfsymbols += 2;

        cout<< endl;  
    }
    
    return;
}

void printPineTree(int n, char symbol) {
    
    int numOfTreeRows = 2;
    int marginSize = n - 1;

    for (int levelCount = 1; levelCount <= n; levelCount++) {
        printShiftedTriangle(numOfTreeRows, marginSize, symbol);
        numOfTreeRows++;
        marginSize--;
    }

    return;
}